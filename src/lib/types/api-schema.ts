/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getIndex"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lessons/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLessons"];
        put: operations["putLessons"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lessons/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteLessonsById"];
        options?: never;
        head?: never;
        patch: operations["patchLessonsById"];
        trace?: never;
    };
    "/units/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUnits"];
        put: operations["putUnits"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/units/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteUnitsById"];
        options?: never;
        head?: never;
        patch: operations["patchUnitsById"];
        trace?: never;
    };
    "/subjects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSubjects"];
        put: operations["putSubjects"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subjects/admin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSubjectsAdmin"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subjects/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteSubjectsById"];
        options?: never;
        head?: never;
        patch: operations["patchSubjectsById"];
        trace?: never;
    };
    "/dump/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getDump"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        lesson: {
            id: number;
            name: string;
            name_normalized: string;
        };
        lesson_array: {
            id: number;
            name: string;
            name_normalized: string;
        }[];
        lesson_create: {
            name: string;
            name_normalized: string;
        };
        unit: {
            id: number;
            lesson: number;
            class_no: number;
            name: string;
            name_normalized: string;
        };
        unit_array: {
            id: number;
            lesson: number;
            class_no: number;
            name: string;
            name_normalized: string;
        }[];
        unit_create: {
            lesson: number;
            class_no: number;
            name: string;
            name_normalized: string;
        };
        subject: {
            id: number;
            lesson: number;
            unit: number;
            name: string;
            name_normalized: string;
            markdown: string;
            summary: string;
            finished: boolean;
        };
        subject_array: {
            id: number;
            lesson: number;
            unit: number;
            name: string;
            name_normalized: string;
            markdown: string;
            summary: string;
            finished: boolean;
        }[];
        subject_create: {
            lesson: number;
            unit: number;
            name: string;
            name_normalized: string;
            markdown: string;
            summary: string;
            finished: boolean;
        };
        dump: {
            lessons: {
                id: number;
                name: string;
                name_normalized: string;
            }[];
            subjects: {
                id: number;
                lesson: number;
                unit: number;
                name: string;
                name_normalized: string;
                markdown: string;
                summary: string;
                finished: boolean;
            }[];
            units: {
                id: number;
                lesson: number;
                class_no: number;
                name: string;
                name_normalized: string;
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getIndex: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getLessons: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["lesson_array"];
                    "multipart/form-data": components["schemas"]["lesson_array"];
                    "text/plain": components["schemas"]["lesson_array"];
                };
            };
        };
    };
    putLessons: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["lesson_create"];
                "multipart/form-data": components["schemas"]["lesson_create"];
                "text/plain": components["schemas"]["lesson_create"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteLessonsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    patchLessonsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["lesson"];
                "multipart/form-data": components["schemas"]["lesson"];
                "text/plain": components["schemas"]["lesson"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["lesson_array"];
                    "multipart/form-data": components["schemas"]["lesson_array"];
                    "text/plain": components["schemas"]["lesson_array"];
                };
            };
        };
    };
    getUnits: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["unit_array"];
                    "multipart/form-data": components["schemas"]["unit_array"];
                    "text/plain": components["schemas"]["unit_array"];
                };
            };
        };
    };
    putUnits: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["unit_create"];
                "multipart/form-data": components["schemas"]["unit_create"];
                "text/plain": components["schemas"]["unit_create"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteUnitsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    patchUnitsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["unit"];
                "multipart/form-data": components["schemas"]["unit"];
                "text/plain": components["schemas"]["unit"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["unit_array"];
                    "multipart/form-data": components["schemas"]["unit_array"];
                    "text/plain": components["schemas"]["unit_array"];
                };
            };
        };
    };
    getSubjects: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["subject_array"];
                    "multipart/form-data": components["schemas"]["subject_array"];
                    "text/plain": components["schemas"]["subject_array"];
                };
            };
        };
    };
    putSubjects: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["subject_create"];
                "multipart/form-data": components["schemas"]["subject_create"];
                "text/plain": components["schemas"]["subject_create"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSubjectsAdmin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["subject_array"];
                    "multipart/form-data": components["schemas"]["subject_array"];
                    "text/plain": components["schemas"]["subject_array"];
                };
            };
        };
    };
    deleteSubjectsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    patchSubjectsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["subject"];
                "multipart/form-data": components["schemas"]["subject"];
                "text/plain": components["schemas"]["subject"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["subject_array"];
                    "multipart/form-data": components["schemas"]["subject_array"];
                    "text/plain": components["schemas"]["subject_array"];
                };
            };
        };
    };
    getDump: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dump"];
                    "multipart/form-data": components["schemas"]["dump"];
                    "text/plain": components["schemas"]["dump"];
                };
            };
        };
    };
}
