/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashRouteRouteImport } from './routes/dash/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoFormRouteImport } from './routes/demo.form'
import { Route as DashSidebarRouteImport } from './routes/dash/_sidebar'
import { Route as DashSidebarTestRouteImport } from './routes/dash/_sidebar/test'
import { Route as DashSidebarAuthRouteImport } from './routes/dash/_sidebar/auth'
import { Route as DashSidebarLessonsRouteRouteImport } from './routes/dash/_sidebar/lessons/route'
import { Route as DashSidebarUnitsIndexRouteImport } from './routes/dash/_sidebar/units/index'
import { Route as DashSidebarSubjectsIndexRouteImport } from './routes/dash/_sidebar/subjects/index'
import { Route as DashSidebarUnitsUnitIdRouteImport } from './routes/dash/_sidebar/units/$unitId'
import { Route as DashSidebarSubjectsSubjectIdRouteImport } from './routes/dash/_sidebar/subjects/$subjectId'

const DashRouteRoute = DashRouteRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormRoute = DemoFormRouteImport.update({
  id: '/demo/form',
  path: '/demo/form',
  getParentRoute: () => rootRouteImport,
} as any)
const DashSidebarRoute = DashSidebarRouteImport.update({
  id: '/_sidebar',
  getParentRoute: () => DashRouteRoute,
} as any)
const DashSidebarTestRoute = DashSidebarTestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => DashSidebarRoute,
} as any)
const DashSidebarAuthRoute = DashSidebarAuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => DashSidebarRoute,
} as any)
const DashSidebarLessonsRouteRoute = DashSidebarLessonsRouteRouteImport.update({
  id: '/lessons',
  path: '/lessons',
  getParentRoute: () => DashSidebarRoute,
} as any)
const DashSidebarUnitsIndexRoute = DashSidebarUnitsIndexRouteImport.update({
  id: '/units/',
  path: '/units/',
  getParentRoute: () => DashSidebarRoute,
} as any)
const DashSidebarSubjectsIndexRoute =
  DashSidebarSubjectsIndexRouteImport.update({
    id: '/subjects/',
    path: '/subjects/',
    getParentRoute: () => DashSidebarRoute,
  } as any)
const DashSidebarUnitsUnitIdRoute = DashSidebarUnitsUnitIdRouteImport.update({
  id: '/units/$unitId',
  path: '/units/$unitId',
  getParentRoute: () => DashSidebarRoute,
} as any)
const DashSidebarSubjectsSubjectIdRoute =
  DashSidebarSubjectsSubjectIdRouteImport.update({
    id: '/subjects/$subjectId',
    path: '/subjects/$subjectId',
    getParentRoute: () => DashSidebarRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dash': typeof DashSidebarRouteWithChildren
  '/demo/form': typeof DemoFormRoute
  '/dash/lessons': typeof DashSidebarLessonsRouteRoute
  '/dash/auth': typeof DashSidebarAuthRoute
  '/dash/test': typeof DashSidebarTestRoute
  '/dash/subjects/$subjectId': typeof DashSidebarSubjectsSubjectIdRoute
  '/dash/units/$unitId': typeof DashSidebarUnitsUnitIdRoute
  '/dash/subjects': typeof DashSidebarSubjectsIndexRoute
  '/dash/units': typeof DashSidebarUnitsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dash': typeof DashSidebarRouteWithChildren
  '/demo/form': typeof DemoFormRoute
  '/dash/lessons': typeof DashSidebarLessonsRouteRoute
  '/dash/auth': typeof DashSidebarAuthRoute
  '/dash/test': typeof DashSidebarTestRoute
  '/dash/subjects/$subjectId': typeof DashSidebarSubjectsSubjectIdRoute
  '/dash/units/$unitId': typeof DashSidebarUnitsUnitIdRoute
  '/dash/subjects': typeof DashSidebarSubjectsIndexRoute
  '/dash/units': typeof DashSidebarUnitsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dash': typeof DashRouteRouteWithChildren
  '/dash/_sidebar': typeof DashSidebarRouteWithChildren
  '/demo/form': typeof DemoFormRoute
  '/dash/_sidebar/lessons': typeof DashSidebarLessonsRouteRoute
  '/dash/_sidebar/auth': typeof DashSidebarAuthRoute
  '/dash/_sidebar/test': typeof DashSidebarTestRoute
  '/dash/_sidebar/subjects/$subjectId': typeof DashSidebarSubjectsSubjectIdRoute
  '/dash/_sidebar/units/$unitId': typeof DashSidebarUnitsUnitIdRoute
  '/dash/_sidebar/subjects/': typeof DashSidebarSubjectsIndexRoute
  '/dash/_sidebar/units/': typeof DashSidebarUnitsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dash'
    | '/demo/form'
    | '/dash/lessons'
    | '/dash/auth'
    | '/dash/test'
    | '/dash/subjects/$subjectId'
    | '/dash/units/$unitId'
    | '/dash/subjects'
    | '/dash/units'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dash'
    | '/demo/form'
    | '/dash/lessons'
    | '/dash/auth'
    | '/dash/test'
    | '/dash/subjects/$subjectId'
    | '/dash/units/$unitId'
    | '/dash/subjects'
    | '/dash/units'
  id:
    | '__root__'
    | '/'
    | '/dash'
    | '/dash/_sidebar'
    | '/demo/form'
    | '/dash/_sidebar/lessons'
    | '/dash/_sidebar/auth'
    | '/dash/_sidebar/test'
    | '/dash/_sidebar/subjects/$subjectId'
    | '/dash/_sidebar/units/$unitId'
    | '/dash/_sidebar/subjects/'
    | '/dash/_sidebar/units/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashRouteRoute: typeof DashRouteRouteWithChildren
  DemoFormRoute: typeof DemoFormRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form': {
      id: '/demo/form'
      path: '/demo/form'
      fullPath: '/demo/form'
      preLoaderRoute: typeof DemoFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dash/_sidebar': {
      id: '/dash/_sidebar'
      path: ''
      fullPath: '/dash'
      preLoaderRoute: typeof DashSidebarRouteImport
      parentRoute: typeof DashRouteRoute
    }
    '/dash/_sidebar/test': {
      id: '/dash/_sidebar/test'
      path: '/test'
      fullPath: '/dash/test'
      preLoaderRoute: typeof DashSidebarTestRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/auth': {
      id: '/dash/_sidebar/auth'
      path: '/auth'
      fullPath: '/dash/auth'
      preLoaderRoute: typeof DashSidebarAuthRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/lessons': {
      id: '/dash/_sidebar/lessons'
      path: '/lessons'
      fullPath: '/dash/lessons'
      preLoaderRoute: typeof DashSidebarLessonsRouteRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/units/': {
      id: '/dash/_sidebar/units/'
      path: '/units'
      fullPath: '/dash/units'
      preLoaderRoute: typeof DashSidebarUnitsIndexRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/subjects/': {
      id: '/dash/_sidebar/subjects/'
      path: '/subjects'
      fullPath: '/dash/subjects'
      preLoaderRoute: typeof DashSidebarSubjectsIndexRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/units/$unitId': {
      id: '/dash/_sidebar/units/$unitId'
      path: '/units/$unitId'
      fullPath: '/dash/units/$unitId'
      preLoaderRoute: typeof DashSidebarUnitsUnitIdRouteImport
      parentRoute: typeof DashSidebarRoute
    }
    '/dash/_sidebar/subjects/$subjectId': {
      id: '/dash/_sidebar/subjects/$subjectId'
      path: '/subjects/$subjectId'
      fullPath: '/dash/subjects/$subjectId'
      preLoaderRoute: typeof DashSidebarSubjectsSubjectIdRouteImport
      parentRoute: typeof DashSidebarRoute
    }
  }
}

interface DashSidebarRouteChildren {
  DashSidebarLessonsRouteRoute: typeof DashSidebarLessonsRouteRoute
  DashSidebarAuthRoute: typeof DashSidebarAuthRoute
  DashSidebarTestRoute: typeof DashSidebarTestRoute
  DashSidebarSubjectsSubjectIdRoute: typeof DashSidebarSubjectsSubjectIdRoute
  DashSidebarUnitsUnitIdRoute: typeof DashSidebarUnitsUnitIdRoute
  DashSidebarSubjectsIndexRoute: typeof DashSidebarSubjectsIndexRoute
  DashSidebarUnitsIndexRoute: typeof DashSidebarUnitsIndexRoute
}

const DashSidebarRouteChildren: DashSidebarRouteChildren = {
  DashSidebarLessonsRouteRoute: DashSidebarLessonsRouteRoute,
  DashSidebarAuthRoute: DashSidebarAuthRoute,
  DashSidebarTestRoute: DashSidebarTestRoute,
  DashSidebarSubjectsSubjectIdRoute: DashSidebarSubjectsSubjectIdRoute,
  DashSidebarUnitsUnitIdRoute: DashSidebarUnitsUnitIdRoute,
  DashSidebarSubjectsIndexRoute: DashSidebarSubjectsIndexRoute,
  DashSidebarUnitsIndexRoute: DashSidebarUnitsIndexRoute,
}

const DashSidebarRouteWithChildren = DashSidebarRoute._addFileChildren(
  DashSidebarRouteChildren,
)

interface DashRouteRouteChildren {
  DashSidebarRoute: typeof DashSidebarRouteWithChildren
}

const DashRouteRouteChildren: DashRouteRouteChildren = {
  DashSidebarRoute: DashSidebarRouteWithChildren,
}

const DashRouteRouteWithChildren = DashRouteRoute._addFileChildren(
  DashRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashRouteRoute: DashRouteRouteWithChildren,
  DemoFormRoute: DemoFormRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
